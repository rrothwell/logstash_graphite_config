input {
    file {
        path => "/Users/developer/Development/LogStash/login_logs/access-*.log"
        start_position => beginning
    }
}

filter {
    if [path] =~ "accounts" {
        mutate { replace => { "type" => "user_access" } }
        grok {
            # The auth field produced by Shibboleth does not the Regex for auth used by LogStash 1.4.2. So we use this custom one.
            match => { "message" => "%{IPORHOST:clientip} %{USER:ident} %{NOTSPACE:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response}" }
        }
	    date {
		    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
	    }
        mutate {
            remove_field => [ "host", "path", "clientip", "ident", "httpversion",  "message"]
        }
    } else if [path] =~ "keystone" {
        mutate { replace => { type => "keystone_access" } }
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:log_timestamp} %{HOSTNAME:client_hostname} %{HOSTNAME:server_hostname}: %{POSINT:server_port} %{IP:ipaddress0} %{IP:ipaddress1} - - \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response}" }
        }
	    date {
		    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
	    }
        mutate {
            remove_field => [ "host", "path", "message", "log_timestamp", "client_hostname", "ipaddress0", "ipaddress1"]
        }
    } else {
        mutate { replace => { type => "unclassified_access" } }
    }
}

output {
    if [type] == "user_access" {
        if [auth] =~ /^https:\/\/aaf1-idp\.its\.utas\.edu\.au\/idp\/shibboleth!https:\/\/keystone\.rc\.nectar\.org\.au\/shibboleth!/ {
            if [request] =~ /\/rcshibboleth\/$/  and [verb] == "GET" and [response] == "200" {
                stdout { codec => rubydebug }
                graphite {
                    host => "127.0.0.1"
                    port => 2003
                    metrics => ["account", "1.0"]
                    metrics_format => "logins.*.count"
                }
            }
        }
    } else if [type] == "keystone_access" {
        # http://docs.openstack.org/developer/keystone/http-api.html
        if [server_hostname] =~ /^keystone.rc.nectar.org.au$/  and [verb] == "POST" and [request] =~ /tokens/ and [response] == "200" {
            if [server_port] == "5000" {
                graphite {
                    host => "127.0.0.1"
                    port => 2003
                    metrics => ["keystone.public", "1.0"]
                    metrics_format => "logins.*.count"
                }
            } else if [server_port] == "35357" {
                graphite {
                    host => "127.0.0.1"
                    port => 2003
                    metrics => ["keystone.admin", "1.0"]
                    metrics_format => "logins.*.count"
                }
            }
		    stdout { codec => rubydebug }
        }
    }
    #elasticsearch {
    #    host => localhost
    #}
}